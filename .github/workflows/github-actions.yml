name: Multi-Platform Build and Push

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - seed
    tags:
      - 'v*'
  pull_request:

env:
  IMAGE_NAME: latex_container

jobs:
  # First job: Build individual platform images natively
  build:
    # The runner is now determined by the matrix
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        # Define platform and runner pairs
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            # Use a native ARM runner for arm64 builds
            runner: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      # Note: The QEMU setup step is no longer needed for native builds

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine version tag
        id: version
        run: |
          ref=${GITHUB_REF##*/}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            ref=${ref#v}
          fi
          if [[ $ref == "main" ]]; then
            ref=latest
          fi
          echo "VERSION=$ref" >> $GITHUB_ENV
          echo "Version set to $ref"

      - name: Normalize GitHub owner (lowercase)
        run: echo "REPO_OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          # Build for the specific platform of this job
          platforms: ${{ matrix.platform }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          provenance: false
          tags: ghcr.io/${{ env.REPO_OWNER_LC }}/${{ env.IMAGE_NAME }}
          # Add Docker layer caching
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  # Second job: Merge digests and create manifest list (unchanged)
  merge:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Normalize GitHub owner (lowercase)
        run: echo "REPO_OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Determine version tag
        id: version
        run: |
          ref=${GITHUB_REF##*/}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            ref=${ref#v}
          fi
          if [[ $ref == "main" ]]; then
            ref=latest
          fi
          echo "VERSION=$ref" >> $GITHUB_ENV
          echo "Version set to $ref"

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          REPO="ghcr.io/${{ env.REPO_OWNER_LC }}/${{ env.IMAGE_NAME }}"
          TAG="${{ env.VERSION }}"

          echo "Found digests:"
          ls -la

          docker buildx imagetools create --tag ${REPO}:${TAG} $(printf "${REPO}@sha256:%s " *)

          echo "Created multi-platform image: ${REPO}:${TAG}"

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ env.REPO_OWNER_LC }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
